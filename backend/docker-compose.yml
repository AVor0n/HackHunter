version: "3.7"
services:
  mongodb:
    image: mongo:4.4.7-focal
    ports:
      - 27017:27017
    volumes:
      - db:/db
  redis:
    image: redis:6
    container_name: redis
    restart: unless-stopped
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    expose:
      - 6379
    command: redis-server /usr/local/etc/redis/redis.conf
#    command: redis-server /usr/local/etc/redis/redis.conf
  server:
    build:
      context: server
      dockerfile: Dockerfile
    env_file:
      - server/.env-prod
    container_name: server
    ports:
      - 8000:8000
    depends_on:
      - mongodb
      - redis
  bot:
    build:
      context: client
      dockerfile: Dockerfile
    env_file:
      - client/.env-prod
    container_name: bot

  worker:
    build:
      context: server
      dockerfile: Dockerfile
    command: celery -A api.worker:celery worker --loglevel=INFO
    ports:
      - 6162:6162
    environment:
      - CELERY_BROKER=redis://62.113.104.103:6379
      - CELERY_RESULT_BACKEND=redis://62.113.104.103:6379
      - CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP=True
      - DEBUG=1
      - CELERY_BROKER_TRANSPORT=amqp
      - CELERY_BROKER_CONNECTION_RETRY=True
    depends_on:
      - server
      - redis
  flower:
    build:
      context: server
      dockerfile: Dockerfile
    command: celery -A api.worker:celery flower
    ports:
      - 5555:5555
    depends_on:
      - server
      - redis
      - worker
    environment:
      - CELERY_BROKER=redis://62.113.104.103:6379
      - CELERY_RESULT_BACKEND=redis://62.113.104.103:6379
      - CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP=True
      - DEBUG=1
      - CELERY_BROKER_TRANSPORT=amqp
      - CELERY_BROKER_CONNECTION_RETRY=True
volumes:
  db:
  redis.conf:
